# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout - console
  # An appender named "file" that writes to a file
  # Turn on/off by setting the level to "info" or "warn"
  # stdout:
  #   kind: console
  file:
    kind: rolling_file
    path: "log/active.log"
    policy:
      kind: compound
      trigger:
        kind: time
        interval: 1 hour
      roller:
        kind: fixed_window
        pattern: "log/{}.log"
        base: 1
        count: 144
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(local)} - {m}{n}"

  # An appender named "requests" that writes to a file with a custom pattern encoder
  stdout:
    kind: console
    target: stdout
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(local)} - {m}{n}"

  transaction:
    kind: file
    path: "log/transaction.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(local)}, {m}{n}"

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: info
  appenders:
    - file

loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  # app::backend::db:
  #   level: info

  # Route log events sent to the "app::requests" logger to the "requests" appender,
  # and *not* the normal appenders installed at the root
  # app::requests:
  #level: info
  #appenders:
  #  - requests
  #additive: false
  okx_trader::statistics:
    level: info
    appenders:
      - transaction

